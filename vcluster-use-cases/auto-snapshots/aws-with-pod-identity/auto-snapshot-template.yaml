kind: VirtualClusterTemplate
apiVersion: management.loft.sh/v1
metadata:
  name: auto-snapshot-vcluster
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  displayName: Automatic Snapshots Virtual Cluster
  description: This virtual cluster template enables automatic snapshots.
  owner:
    team: loft-admins
  template:
    metadata: {}
    instanceTemplate:
      metadata: {}
    pro: {}
    helmRelease:
      chart:
        version: 0.28.0
      values: |-
        sync:
          toHost:
            ingresses:
              enabled: true
    accessPoint:
      ingress: {}
    spaceTemplate:
      metadata: {}
  versions:
    - version: 1.0.0
      template:
        metadata: {}
        instanceTemplate:
          metadata: {}
        objects: |-
          ---
          apiVersion: v1
          kind: Namespace
          metadata:
            name: demo-web
          ---
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: demo-web-content
            namespace: demo-web
          data:
            index.html: |
              <!doctype html>
              <html lang="en">
              <head>
                <meta charset="utf-8"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <title>vCluster Demo App</title>
                <style>
                  body { font-family: system-ui, sans-serif; margin: 3rem; line-height: 1.4; }
                  .card { padding: 1.25rem 1.5rem; border-radius: 12px; box-shadow: 0 2px 18px rgba(0,0,0,.08); }
                  .muted { color: #666; font-size: .95rem; }
                  code { background: #f6f8fa; padding: .15rem .35rem; border-radius: 6px; }
                  .hero { display: block; max-width: 920px; width: 100%; height: auto; margin: 0 0 1rem 0; border-radius: 12px; }
                </style>
              </head>
              <body>
                <h1>ðŸš€ vCluster Demo App</h1>
          
                <!-- vCluster hero image (served from vcluster.com CDN) -->
                <img class="hero" alt="vCluster â€“ Virtual Kubernetes Clusters"
                     src="https://cdn.prod.website-files.com/65a5be30bf4809bb3a2e8b29/6899d1b17a88c594e25f4da9_vcluster-hero-image.webp" />
          
                <p class="muted">This page is served by NGINX (unprivileged) with SSI enabled.</p>
                <div class="card">
                  <p>Pod: <code><!--# echo var="hostname" --></code></p>
                  <p>Time: <code><!--# echo var="date_local" --></code></p>
                </div>
                <p class="muted">Image: <code>ghcr.io/nginxinc/nginx-unprivileged:stable-alpine</code></p>
              </body>
              </html>
          ---
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: demo-web-nginx
            namespace: demo-web
          data:
            default.conf: |
              server {
                listen       8080;
                server_name  _;
                ssi on;
                ssi_types text/shtml text/html;  # parse SSI in .html
                index index.html;
          
                location / {
                  root /usr/share/nginx/html;
                  try_files $uri $uri/ /index.html;
                }
              }
          ---
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: demo-web
            namespace: demo-web
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: demo-web
            template:
              metadata:
                labels:
                  app: demo-web
              spec:
                securityContext:
                  fsGroup: 101
                  fsGroupChangePolicy: OnRootMismatch
                containers:
                  - name: web
                    image: ghcr.io/nginxinc/nginx-unprivileged:stable-alpine
                    imagePullPolicy: IfNotPresent
                    ports:
                      - name: http
                        containerPort: 8080
                    volumeMounts:
                      - name: web-content
                        mountPath: /usr/share/nginx/html
                        readOnly: true
                      - name: nginx-conf
                        mountPath: /etc/nginx/conf.d/default.conf
                        subPath: default.conf
                      - name: tmp
                        mountPath: /tmp
                      - name: cache
                        mountPath: /var/cache/nginx
                      - name: run
                        mountPath: /var/run
                    readinessProbe:
                      httpGet:
                        path: /
                        port: http
                    livenessProbe:
                      httpGet:
                        path: /
                        port: http
                      initialDelaySeconds: 10
                    resources:
                      requests:
                        cpu: 20m
                        memory: 64Mi
                      limits:
                        cpu: 200m
                        memory: 256Mi
                    securityContext:
                      allowPrivilegeEscalation: false
                      readOnlyRootFilesystem: true
                      runAsNonRoot: true
                      runAsUser: 101
                      runAsGroup: 101
                      seccompProfile:
                        type: RuntimeDefault
                      capabilities:
                        drop: ["ALL"]
                volumes:
                  - name: web-content
                    configMap:
                      name: demo-web-content
                  - name: nginx-conf
                    configMap:
                      name: demo-web-nginx
                  - name: tmp
                    emptyDir: {}
                  - name: cache
                    emptyDir: {}
                  - name: run
                    emptyDir: {}
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: demo-web
            namespace: demo-web
            labels:
              app: demo-web
          spec:
            selector:
              app: demo-web
            ports:
              - name: http
                port: 80
                targetPort: http
                protocol: TCP
            type: ClusterIP
          ---
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: demo-web
            namespace: demo-web
            annotations:
              kubernetes.io/ingress.class: nginx
          spec:
            rules:
              - host: demo-web.demos.vcluster.dev
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: demo-web
                          port:
                            number: 80

        pro:
          enabled: true
        helmRelease:
          chart:
            version: 0.29.1
          values: |+
            external:
              platform:
                autoDelete:
                  afterInactivity: 1800000
                autoSnapshot:
                  schedule: "20 7-17/2 * * 1-5"
                  enabled: true
                  retention:
                    period: {{ .Values.retentionPeriod }}
                    maxSnapshots: {{ .Values.maxSnapshots }}
                  timezone: '{{ default "America/New_York" (index .Values.loft.clusterAnnotations "demos.vcluster.com/timezone") }}'
                  storage:
                    type: s3
                    s3:
                      url: '{{ index .Values.loft.clusterAnnotations "demos.vcluster.com/s3-url" }}'
            sleepMode:
              enabled: true
              autoSleep:
                afterInactivity: 35m
              timeZone: '{{ default "America/New_York" (index .Values.loft.clusterAnnotations "demos.vcluster.com/timezone") }}'
              autoWakeup:
                schedule: 10 7-17 * * 1-5
            sync:
              toHost:
                ingresses:
                  enabled: true
            controlPlane:
              # Use a Platform database connector instead of using the default SQLite backend
              backingStore:
                etcd:
                  embedded:
                    enabled: true
              coredns:
                embedded: true
        accessPoint:
          ingress: {}
        spaceTemplate:
          metadata: {}
          objects: |
            apiVersion: eks.services.k8s.aws/v1alpha1
            kind: PodIdentityAssociation
            metadata:
              name: vc-{{ .Values.loft.virtualClusterName }}-snapshot-pod-identity
            spec:
              clusterName: '{{ index .Values.loft.clusterAnnotations "demos.vcluster.com/eks-cluster-name" }}'
              namespace: {{ .Values.loft.virtualClusterNamespace }}
              serviceAccount: vc-{{ .Values.loft.virtualClusterName }}
              roleARN: '{{ index .Values.loft.clusterAnnotations "demos.vcluster.com/vcluster-snapshots-arn" }}'
      parameters:
        - variable: maxSnapshots
          label: Maximum vCluster Snapshots
          type: number
          description: >-
            Maximum number of vCluster snapshots to retain in configured S3 bucket for this vCluster.
          defaultValue: 5
          max: 10
          min: 1
          section: Snapshot Config
        - variable: retentionPeriod
          label: Snapshot Retention Period
          type: number
          description: >-
            Number of days to retain vCluster snapshots.
          defaultValue: 5
          max: 10
          min: 1
          section: Snapshot Config
  access:
    - verbs:
        - '*'
      subresources:
        - '*'
      users:
        - admin
status: {}