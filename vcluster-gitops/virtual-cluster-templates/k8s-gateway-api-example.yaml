apiVersion: management.loft.sh/v1
kind: VirtualClusterTemplate
metadata:
  name: k8s-gateway-api-example
spec:
  displayName: Gateway API Example
  description: >-
    This virtual cluster template deploys a vCluster with embedded etcd and
    integrated CoreDNS.
  owner:
    team: loft-admins
  template:
    metadata: {}
    instanceTemplate:
      metadata: {}
    pro: {}
    helmRelease:
      chart:
        version: 0.20.0-beta.15
      values: |-
        sync:
          toHost:
            ingresses:
              enabled: true

        # Checkout https://vcluster.com/pro/docs/ for more config options
    accessPoint:
      ingress: {}
    spaceTemplate:
      metadata: {}
  versions:
    - template:
        metadata:
          annotations:
            sleepmode.loft.sh/ignore-user-agents: argo*
        instanceTemplate:
          metadata:
            labels:
              env: '{{ .Values.env }}'
              team: '{{ .Values.loft.project }}'
            annotations:
              loft.sh/custom-links: >-
                Helm-Dashboard=https://helm-dashboard-{{
                .Values.loft.virtualClusterName }}-{{
                .Values.loft.clusterAnnotations.domainPrefix }}.{{
                .Values.loft.clusterAnnotations.domain }}
        apps:
          - name: helm-dashboard
            namespace: helm-dashboard
        objects: |-
          apiVersion: v1
          kind: Namespace
          metadata:
            name: httpbin
          ---
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: httpbin
            namespace: httpbin
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: httpbin
            namespace: httpbin
            labels:
              app: httpbin
              service: httpbin
          spec:
            ports:
            - name: http
              port: 8000
              targetPort: 8080
            selector:
              app: httpbin
          ---
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: httpbin
            namespace: httpbin
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: httpbin
                version: v1
            template:
              metadata:
                labels:
                  app: httpbin
                  version: v1
              spec:
                serviceAccountName: httpbin
                containers:
                - image: docker.io/kong/httpbin
                  imagePullPolicy: IfNotPresent
                  name: httpbin
                  # Same as found in Dockerfile's CMD but using an unprivileged port
                  command:
                  - gunicorn
                  - -b
                  - "[::]:8080"
                  - httpbin:app
                  - -k
                  - gevent
                  env:
                  # Tells pipenv to use a writable directory instead of $HOME
                  - name: WORKON_HOME
                    value: /tmp
                  ports:
                  - containerPort: 8080
        pro:
          enabled: true
        helmRelease:
          chart:
            version: 0.20.0-beta.15
          values: |
            external:
              platform:
                autoSleep:
                  afterInactivity: 6000
                autoDelete:
                  afterInactivity: 150000
                  
            sync:
              toHost:
                ingresses:
                  enabled: true

            controlPlane:
              statefulSet:
                labels:
                  env: '{{ .Values.env }}'
                  team: '{{ .Values.loft.project }}'
              # Use an embedded managed etcd server instead of using the default SQLite backend
              backingStore:
                etcd:
                  embedded:
                    enabled: true
              distro:
                k8s:
                  apiServer:
                    image:
                      tag:  "{{ .Values.k8sVersion }}"
                  controllerManager:
                    image:
                      tag: "{{ .Values.k8sVersion }}"
              coredns:
                embedded: true
                
            experimental:
              genericSync:
                role:
                  extraRules:
                    - apiGroups: ["gateway.networking.k8s.io"]
                      resources: ["httproutes"]
                      verbs: ["create", "delete", "patch", "update", "get", "list", "watch"]
                # extra cluster scoper permissions required for the plugin
                clusterRole:
                  extraRules:
                    - apiGroups: ["apiextensions.k8s.io"]
                      resources: ["customresourcedefinitions"]
                      verbs: ["get", "list", "watch"]
                export:
                  - apiVersion: gateway.networking.k8s.io/v1
                    kind: HTTPRoute
                    patches:
                      - op: rewriteName
                        path: .spec.rules[*].backendRefs[*].name
                    reversePatches:
                      - op: copyFromObject
                        fromPath: status
                        path: status
              syncSettings:
                syncLabels:
                  - demos.loft.sh/do-not-change
                  - x.demos.loft.sh/*

            # Checkout https://vcluster.com/pro/docs/ for more config options
        accessPoint:
          ingress: {}
        spaceTemplate:
          metadata: {}
      parameters:
        - variable: k8sVersion
          label: k8sVersion
          description: Please select Kubernetes version
          options:
            - v1.30.2
            - v1.29.6
            - v1.28.11
            - v1.27.9
            - v1.26.15
          defaultValue: v1.29.6
        - variable: env
          label: Deployment Environment
          description: >-
            Environment for deployments for this vCluster used as cluster label
            for Argo CD ApplicationSet Cluster Generator
          options:
            - dev
            - qa
            - prod
          defaultValue: dev
      version: 1.0.0
    - template:
        metadata: {}
        instanceTemplate:
          metadata: {}
        pro:
          enabled: true
        helmRelease:
          chart:
            version: 0.20.0-beta.15
          values: |-
            sync:
              toHost:
                ingresses:
                  enabled: true
            # Checkout https://vcluster.com/pro/docs/ for more config options
        accessPoint:
          ingress: {}
        spaceTemplate:
          metadata: {}
      version: 0.0.0
  access:
    - verbs:
        - '*'
      subresources:
        - '*'
      users:
        - admin
